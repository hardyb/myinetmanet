%description:
Testing DHCP protocol
%#--------------------------------------------------------------------------------------------------------------
%file: test.ned

import inet.networklayer.autorouting.ipv4.IPv4NetworkConfigurator;
import inet.nodes.ethernet.EtherSwitch;
import inet.nodes.inet.StandardHost;
import inet.util.ThruputMeteringChannel;

network DhcpExample
{
    parameters:
        int numHosts;
    types:
        channel ethernetline extends ThruputMeteringChannel
        {
            delay = 0.1us;
            datarate = 10Mbps;
            thruputDisplayFormat = "u";
        }
    submodules:
        srv: StandardHost;
        switch: EtherSwitch {
            parameters:
                @display("p=186,250");
        }
        cli[numHosts]: StandardHost;
        configurator: IPv4NetworkConfigurator {
            parameters:
                config = xml("<config><interface hosts='srv' address='192.168.1.1' netmask='255.255.255.0' /></config>");
        }
    connections:
        srv.ethg++ <--> ethernetline <--> switch.ethg++;
        for i=0..numHosts-1 {
            cli[i].ethg++ <--> ethernetline <--> switch.ethg++;
        }
}

%#--------------------------------------------------------------------------------------------------------------
%inifile: omnetpp.ini

[General]
tkenv-plugin-path = ../../../etc/plugins
ned-path = .;../../../../src;../../lib

sim-time-limit = 900s

network = DhcpExample

*.numHosts = 10

**.numUdpApps = 1

**.cli[*].udpApp[0].typename = "DHCPClient"
**.cli[*].udpApp[0].interface="eth0"   # interface toward dhcp server

**.srv.udpApp[0].typename = "DHCPServer"
**.srv.udpApp[0].net = "192.168.1.0"        # IP network to assign
**.srv.udpApp[0].mask = "255.255.255.0"        # netmask to assign
**.srv.udpApp[0].ipBegin = "192.168.1.100"    # ip to start to lease
**.srv.udpApp[0].clientNum = 100     # number of ip to lease
**.srv.udpApp[0].gateway = "192.168.1.1"     # gateway to assign
**.srv.udpApp[0].dns = ""         # dns to assign
**.srv.udpApp[0].leaseTime = 1000s     # lease time in seconds
**.srv.udpApp[0].interface="eth0"   # interface to listen
%#--------------------------------------------------------------------------------------------------------------
%#--------------------------------------------------------------------------------------------------------------
%contains: stdout
Host cli[0] got ip: 192.168.1.100/255.255.255.0
%contains: stdout
Host cli[1] got ip: 192.168.1.101/255.255.255.0
%contains: stdout
Host cli[2] got ip: 192.168.1.102/255.255.255.0
%contains: stdout
Host cli[3] got ip: 192.168.1.103/255.255.255.0
%contains: stdout
Host cli[4] got ip: 192.168.1.104/255.255.255.0
%contains: stdout
Host cli[5] got ip: 192.168.1.105/255.255.255.0
%contains: stdout
Host cli[6] got ip: 192.168.1.106/255.255.255.0
%contains: stdout
Host cli[7] got ip: 192.168.1.107/255.255.255.0
%contains: stdout
Host cli[8] got ip: 192.168.1.108/255.255.255.0
%contains: stdout
Host cli[9] got ip: 192.168.1.109/255.255.255.0
%#--------------------------------------------------------------------------------------------------------------
